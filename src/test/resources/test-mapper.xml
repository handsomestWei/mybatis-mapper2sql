<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.test.dao.UserDao">

    <resultMap id="UserResultMap" type="com.test.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectById" resultMap="UserResultMap">
        SELECT id, username, email, create_time, status
        FROM users
        WHERE id = #{id}
    </select>

    <select id="selectByUsername" resultMap="UserResultMap">
        SELECT id, username, email, create_time, status
        FROM users
        WHERE username = #{username}
    </select>

    <select id="selectByCondition" resultMap="UserResultMap">
        SELECT id, username, email, create_time, status
        FROM users
        <where>
            <if test="username != null and username != ''">
                AND username LIKE CONCAT('%', #{username}, '%')
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="startTime != null">
                AND create_time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                AND create_time &lt;= #{endTime}
            </if>
        </where>
        ORDER BY create_time DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <insert id="insertUser" parameterType="com.test.entity.User">
        INSERT INTO users (username, email, create_time, status)
        VALUES (#{username}, #{email}, #{createTime}, #{status})
    </insert>

    <update id="updateUser" parameterType="com.test.entity.User">
        UPDATE users
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="email != null">email = #{email},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteUser">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <delete id="deleteByStatus">
        DELETE FROM users WHERE status = #{status}
    </delete>

</mapper>
